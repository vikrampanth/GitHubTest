    static int quickSelect(int arr[], int low, int high, int k){
        if( k > 0 && k <= (high-low+1) ){
            int pos=partition(arr, low, high);
			or
			int pos=randomPartition(arr, low, high);
            if(pos-low == k-1)
                return arr[pos];
            else if( pos-low > k-1)
                return quickSelect(arr, low, pos-1, k );
            return quickSelect(arr, pos+1, high, k+low -pos-1 );
        }
        return 0;
    }
    static int partition(int arr[], int low, int high){
        int temp=arr[high], i=low;
        for(int j=low; j< high;j++){
            if(arr[j] < temp){
                swap(arr, j, i);
                i++;                
            }
        }
        swap(arr, i, high);
        return i;
    }
    int randomPartition(int arr[], int l, int r)
    {
        int n = r-l+1;
        int pivot = (int)(Math.random()) % n;
        swap(arr, l + pivot, r);
        return partition(arr, l, r);
    }