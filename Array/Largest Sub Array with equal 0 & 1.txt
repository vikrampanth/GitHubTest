    static int maxLen(int arr[], int n) 
    {
        // Creates an empty hashMap hM
        HashMap<Integer, Integer> hM = new HashMap<Integer, Integer>();
 
        int sum = 0;     // Initialize sum of elements
        int max_len = 0; // Initialize result
        int ending_index = -1;
        int start_index = 0;
 
        for (int i = 0; i < n; i++) 
        {
            arr[i] = (arr[i] == 0) ? -1 : 1;
        }
        printArr(arr);
        // Traverse through the given array
        for (int i = 0; i < n; i++) 
        {
            sum += arr[i];
            if (sum == 0) 
            {
                max_len = i + 1;
                ending_index = i;
            }
            if (hM.containsKey(sum)) 
            {
                if (max_len < i - hM.get(sum )) 
                {
                    max_len = i - hM.get(sum );
                    ending_index = i;
                    // hM.put(sum , i);
                }
            } 
            else{ // Else put this sum in hash table
                hM.put(sum , i);
            }
            System.out.println(sum+" "+i+" "+max_len+" "+ending_index);
        }
 
        for (int i = 0; i < n; i++) 
        {
            arr[i] = (arr[i] == -1) ? 0 : 1;
        }
 
        int end = ending_index - max_len + 1;
        System.out.println(end + " to " + ending_index);
        return max_len;
    }
